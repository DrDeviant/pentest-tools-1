#!/usr/bin/python3

import requests
import os
import sys
from time import sleep

from requests.api import get

user_path = print('[+] Creating the respective Linux and Windows directories...\n')
sleep(1)
for dir in ['linux-tools', 'windows-tools']:
  if dir in os.listdir():
    print(f'[x] Directory {dir} already exists...')
  else:
    os.mkdir(dir)
    print(f'[+] Directories {dir} successfully created...\n')

#Download linux tools first
# print('[+] Downloading updated linux scripts and standalone binaries...')
# sleep(1)
# print('[+] Fetching Linpeas...')
# linpeas = 'https://raw.githubusercontent.com/carlospolop/PEASS-ng/master/linPEAS/linpeas.sh'
# get_linpeas = requests.get(linpeas, allow_redirects=True)
# print('[+] Saving LinPeas...')
# sleep(1)
# open('linux-tools/linpeas.sh', 'wb').write(get_linpeas.content)
# print('[+] Lipeas saved...')
# sleep(1)
# print('[+] Getting Linux binaries...')
# sleep(1)

# nix_url = 'https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/'
# binaries = ['ncat','nmap','socat']
# for nix_bin in binaries:
#   binary_url = nix_url + nix_bin
#   get_nix_bin = requests.get(binary_url, allow_redirects=True)
#   print(f'[+] Saving {nix_bin}...')
#   open(f'linux-tools/{nix_bin}', 'wb').write(get_nix_bin.content)
#   print(f'[+] {nix_bin} saved')

# print(f'[+] Downloading Chisel...')
# chisel_url = 'https://github.com/jpillora/chisel/releases/download/v1.7.6/chisel_1.7.6_linux_amd64.gz'
# get_chisel = requests.get(chisel_url, allow_redirects=True)
# open('linux-tools/chisel_1.7.6_linux_amd64.gz', 'wb').write(get_chisel.content)
# print('[+] Chisel saved...')
# print('[+] All linux scripts and binaries updated')
# sleep(1)

#Create folders for different architectures
os.chdir('windows-tools')
for arch in ['64-tools', '86-tools','64-86-tools' 'powershell', 'cmd']:
  if arch in os.listdir():
    print(f'[x] Directory {arch} already exists...')
  else:
    os.mkdir(arch)
    print(f'[+] Directory {arch} successfully created...\n')
    
print('[+] Downloding updated Windows Binaries...')
os.chdir('../')
sleep(1)
chisel_win = 'https://github.com/jpillora/chisel/releases/download/v1.7.6/chisel_1.7.6_windows_amd64.gz'
chisel_win86 = 'https://github.com/jpillora/chisel/releases/download/v1.7.6/chisel_1.7.6_windows_386.gz'
print('[+] Fetching chisel...')
get_chisel = requests.get(chisel_win, allow_redirects=True)
get_chisel_386 = requests.get(chisel_win86, allow_redirects=True)
print('[+] Saving chisel')
open('windows-tools/64-tools/chisel_1.7.6_windows_amd64.gz', 'wb').write(get_chisel.content)
open('windows-tools/86-tools/chisel_1.7.6_windows_386.gz', 'wb').write(get_chisel_386.content)
print('[+] Chisel saved...')
sleep(1)

win_url = 'https://github.com/andrew-d/static-binaries/blob/master/binaries/windows/x86/'
win_binaries = ['ncat', 'nmap', 'nping']
for win_bin in win_binaries:
    binary_url = win_url + win_bin
    get_win_bin = requests.get(binary_url, allow_redirects=True)
    print(f'[+] Saving {win_bin}...')
    open(f'windows-tools/86-tools/{win_bin}', 'wb').write(get_win_bin.content)
    print(f'[+] {win_bin} saved')
    sleep(1)

ncat_win = 'https://github.com/tijme/binaries/blob/master/ncat/ncat_windows_x86.exe'
netcat_win_x64 = 'https://github.com/tijme/binaries/blob/master/netcat/netcat_windows_x64.exe'
netcat_win_x86 = 'https://github.com/tijme/binaries/blob/master/netcat/netcat_windows_x86.exe'
nmap_win = 'https://github.com/tijme/binaries/blob/master/nmap/nmap_windows_x86.exe'
plink_x64 = 'https://the.earth.li/~sgtatham/putty/latest/w64/plink.exe'
plink_x86 = 'https://the.earth.li/~sgtatham/putty/latest/w32/plink.exe'
socat_x64 = 'https://github.com/3ndG4me/socat/releases/download/v1.7.3.3/socatx64.exe'
socat_x86 = 'https://github.com/3ndG4me/socat/releases/download/v1.7.3.3/socatx86.exe'
winpeas_x64 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/x64/Release/winPEASx64.exe'
winpeas_x86 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/x86/Release/winPEASx86.exe'
winpeas_any = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Release/winPEASany.exe'
winpeas_obfuscated_x64 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASx64.exe'
winpeas_obfuscated_x86 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASx86.exe'
winpeas_obfuscated_any = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/winPEASany.exe'
winpeas_dotfuscated_x64 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/Dotfuscated/x64/winPEASx64.exe'
winpeas_dotfuscated_x86 = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/Dotfuscated/x86/winPEASx86.exe'
winpeas_dotfuscated_any = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASexe/binaries/Obfuscated%20Releases/Dotfuscated/any/winPEASany.exe'
winpeas_bat = 'https://github.com/carlospolop/PEASS-ng/blob/master/winPEAS/winPEASbat/winPEAS.bat'
mimikatz_zip = 'https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20210810-2/mimikatz_trunk.zip'
mimikatz_7z = 'https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20210810-2/mimikatz_trunk.7z'
lazagne_x86 = 'https://github.com/AlessandroZ/LaZagne/releases/download/2.4.3/lazagne.exe'

ghostPack_v35 = ['LockLess.exe', 'Rubeus.exe', 'SafetyKatz.exe', 'Seatbelt.exe', 'SharpDPAPI.exe', 'SharpDump.exe', 'SharpUp.exe', 'SharpWMI.exe']
ghostpack_v35_url = 'https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/blob/master/dotnet%20v3.5%20compiled%20binaries/'
ghostPack_v45 = ['Certify.exe', 'ForgeCert.exe', 'LockLess.exe', 'Rubeus.exe', 'SafetyKatz.exe', 'Seatbelt.exe', 'SharpDPAPI.exe', 'SharpDump.exe', 'SharpUp.exe', 'SharpWMI.exe']
ghostpack_v45_url = 'https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/blob/master/dotnet%20v4.5%20compiled%20binaries/'

amsi_trigger_x64 = 'https://github.com/RythmStick/AMSITrigger/releases/download/v3/AmsiTrigger_x64.exe'
amsi_trigger_x86 = 'https://github.com/RythmStick/AMSITrigger/releases/download/v3/AmsiTrigger_x86.exe'
ps_tools = 'https://download.sysinternals.com/files/PSTools.zip'
process_hacker = 'https://github.com/processhacker/processhacker/releases/download/v2.39/processhacker-2.39-bin.zip'
sharp_edr_checker = 'https://github.com/PwnDexter/SharpEDRChecker/releases/download/1.1/SharpEDRChecker.exe'
sharphound_exe = 'https://github.com/BloodHoundAD/BloodHound/raw/master/Collectors/SharpHound.exe'
sharphound_ps1 = 'https://raw.githubusercontent.com/BloodHoundAD/BloodHound/master/Collectors/SharpHound.ps1'